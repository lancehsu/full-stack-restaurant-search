{"version":3,"sources":["util/dateOperations.ts","store/darkMode/reducer.ts","store/darkMode/types.ts","store/dialog/reducer.ts","store/dialog/types.ts","store/restaurants/reducer.ts","store/restaurants/types.ts","store/favorites/reducer.ts","store/favorites/types.ts","store/message/reducer.ts","store/message/types.ts","store/user/reducer.ts","store/user/types.ts","store/inviteKey/reducer.ts","store/inviteKey/types.ts","store/rootReducer.ts","store/index.ts","store/message/actions.ts","store/favorites/actions.ts","components/PopupMenuList.tsx","components/Home/SearchResultTable/AddToFavoriteBtn.tsx","store/dialog/actions.ts","store/restaurants/actions.ts","components/Home/SearchResultTable/index.tsx","components/Home/DateButtonGroup.tsx","components/Home/TimeInput.tsx","components/Home/SearchField.tsx","pages/index.tsx","components/Favorites/FavoriteCard/FavoriteCardTitle.tsx","components/Favorites/FavoriteCard/index.tsx","components/Favorites/FavoritesContainer.tsx","components/Favorites/AddFavoriteDialog.tsx","pages/favorites.tsx","components/FavortieContent/RestaurantCard.tsx","components/FavortieContent/FavoriteRestaurantsContainer.tsx","pages/favoriteContent.tsx","styles/theme.ts","store/darkMode/actions.ts","components/NavBar/LoginDialog/SignupDialog.tsx","components/NavBar/LoginDialog/index.tsx","store/user/actions.ts","components/NavBar/UserAvatar.tsx","components/NavBar/index.tsx","components/Layout.tsx","components/MessageDialog.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Dates","darkModeReducer","state","initialState","darkMode","action","type","undefined","payload","dialogIsOpenReducer","dialogIsOpen","restaurantsReducer","restaurants","favoritesReducer","favorites","concat","newState","idx","findIndex","e","_id","name","slice","messageReducer","message","open","content","confirmFunction","userReducer","user","inviteKeysReducer","inviteKeys","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","middleWares","thunkMiddleware","middlewareEnhancer","applyMiddleware","composedEnhancer","composeWithDevTools","store","createStore","persistor","persistStore","dayList","dateNumToStr","dateNum","sun","mon","tue","wed","thu","fri","sat","console","error","parseTimeToStr","start","end","startAm","startHour","startMin","endAm","endHour","endMin","startTimeStr","endTimStr","showMessage","getFavoritesSuccess","data","getFavorites","dispatch","getState","axios","get","headers","Authorization","token","then","status","catch","err","alert","putFavorite","favoriteName","updateObject","put","putFavoriteSuccess","remove","restaurant","PopupMenuList","children","title","menuItems","anchorRef","React","useRef","useState","setOpen","handleToggle","prevOpen","handleClose","event","current","contains","target","handleListKeyDown","preventDefault","Tooltip","ButtonBase","ref","disableRipple","onClick","Popper","anchorEl","role","transition","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","onKeyDown","map","menuItem","MenuItem","memo","history","useHistory","useDispatch","length","IconButton","color","push","Bookmark","getRestaurants","dates","time","hour","min","am","dateStr","reduce","acc","curr","timeStr","parseInt","toString","getRestaurantsSuccess","SearchResultTable","useSelector","useEffect","TableContainer","gridArea","width","component","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","row","scope","whiteSpace","align","close","dateOptions","setDateOptions","theme","useTheme","dateNumList","Object","keys","display","Button","backgroundColor","palette","grey","borderRadius","prev","replace","c","toUpperCase","setSearchTime","setHour","setMin","setAm","alignItems","justifyContent","Input","placeholder","value","onChange","hr","Typography","variant","numValue","useStyles","makeStyles","createStyles","container","flexFlow","searchContainer","padding","dateSelectorContainer","search","position","shape","fade","common","white","searchIcon","spacing","height","pointerEvents","inputRoot","inputInput","paddingLeft","classes","searchName","setSearchName","date","Date","getDay","initSearchDateOption","searchDateOption","setSearchDateOption","searchTime","isSearchFieldFocus","setIsSearchFieldFocus","useMemo","filter","searchRestaurants","useCallback","pressEnterCallback","window","addEventListener","removeEventListener","className","Search","InputBase","root","input","onFocus","onBlur","inputProps","Home","getContrastText","href","FavoriteListTitle","editMode","favoriteEditName","setFavoriteEditName","TextField","size","editModeCard","minHeight","cursor","normalCard","FavoriteCard","url","favorite","selfDelete","selfEditName","Card","elevation","CardHeader","FavoriteCardTitle","disableTypography","Cancel","CardContent","FavoritesContainer","overflow","gridTemplate","gap","newName","delete","deleteFavoriteSuccess","AddFavoriteDialog","isOpen","setFavoriteName","startIcon","AddCircleOutline","gridColumn","Dialog","onClose","DialogTitle","DialogContent","margin","label","fullWidth","DialogActions","post","postFavoriteSuccess","postFavorite","editModeOnBtn","primary","light","normalBtn","dark","Favorites","setEditMode","EditOutlined","RestaurantCard","openInfo","__v","restaurantDates","sort","day","dateToStrArrProcess","titleTypographyProps","i","FavoriteRestaurantsContainer","find","to","FavoriteContent","useParams","getMuiThemeObj","prefersDarkMode","main","contrastText","secondary","typography","button","textTransform","changeDarkMode","isDarkMode","SignupDialog","email","setEmail","password","setPassword","setName","resetTextField","required","autoFocus","username","response","LoginDialog","onDialogClose","success","info","loginSuccess","login","Avatar","AppBar","Toolbar","alignContent","BrightnessHigh","Brightness2","justifyItems","gridGap","Layout","MessageDialog","App","useMediaQuery","createMuiTheme","document","body","ThemeProvider","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","loading","CircularProgress","getElementById","URL","process","origin","fetch","contentType","indexOf","ready","unregister","reload","warn","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9002c8e5.chunk.js","sourcesContent":["import { ResponseRestaurant } from '../store/restaurants/types';\n\nexport type DateOptions = {\n  [date in Dates]: boolean;\n};\n\nexport enum Dates {\n  sun = '0',\n  mon = '1',\n  tue = '2',\n  wed = '3',\n  thu = '4',\n  fri = '5',\n  sat = '6',\n}\n\nexport const dayList = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport const dateNumToStr = (dateNum: Dates): string => {\n  switch (dateNum) {\n    case Dates.sun:\n      return 'sun';\n    case Dates.mon:\n      return 'mon';\n    case Dates.tue:\n      return 'tue';\n    case Dates.wed:\n      return 'wed';\n    case Dates.thu:\n      return 'thu';\n    case Dates.fri:\n      return 'fri';\n    case Dates.sat:\n      return 'sat';\n    default:\n      console.error('Wrong date number');\n      return '';\n  }\n};\n\nexport const parseTimeToStr = (start: number, end: number): string => {\n  if (start === -1 && end === -1) return '';\n\n  let startAm = true;\n  let startHour = start | 0;\n  const startMin = (start - startHour) * 60;\n  if (startHour > 12) {\n    startHour -= 12;\n    startAm = false;\n  }\n\n  let endAm = true;\n  let endHour = end | 0;\n  const endMin = (end - endHour) * 60;\n  if (endHour > 12) {\n    endHour -= 12;\n    endAm = false;\n  }\n  const startTimeStr = `${startHour}:${startMin >= 10 ? startMin : `0${startMin}`} ${\n    startAm ? 'AM' : 'PM'\n  }`;\n  const endTimStr = `${endHour}:${endMin >= 10 ? endMin : `0${endMin}`} ${endAm ? 'AM' : 'PM'}`;\n  return `${startTimeStr}\\n-${endTimStr}`;\n};\n\nexport const dateToStrArrProcess = ({\n  name,\n  _id,\n  __v,\n  ...restaurantDates\n}: ResponseRestaurant): string[] => {\n  // * Filter the no-ope date, turn date to dateNum, and sort\n  return (Object.keys(restaurantDates) as Dates[])\n    .filter((date) => restaurantDates[date].open !== -1 && restaurantDates[date].close !== -1)\n    .map((e) => parseInt(e))\n    .sort()\n    .map((e) => {\n      const day = e.toString() as Dates;\n      const { open, close } = restaurantDates[day];\n      return `${dateNumToStr(day).replace(/^\\w/, (c: string): string =>\n        c.toUpperCase()\n      )} ${parseTimeToStr(open, close)}`;\n    });\n};\n","import { CHANGE_MODE, DarkModeAction } from './types';\nimport { initialState } from '../rootReducer';\n\nconst darkModeReducer = (state = initialState.darkMode, action: DarkModeAction): boolean => {\n  switch (action.type) {\n    case CHANGE_MODE:\n      return action.payload === undefined ? !state : action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default darkModeReducer;\n","export const CHANGE_MODE = 'CHANGE_MODE';\nexport type ChangeDarkMode = { type: typeof CHANGE_MODE; payload?: boolean };\nexport type DarkModeAction = ChangeDarkMode;\n","import { OPEN_DIALOG, CLOSE_DIALOG, DialogIsOpenAction } from './types';\nimport { initialState } from '../rootReducer';\n\nconst dialogIsOpenReducer = (state = initialState.dialogIsOpen, action: DialogIsOpenAction): boolean => {\n  switch (action.type) {\n    case OPEN_DIALOG:\n      return true;\n    case CLOSE_DIALOG:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default dialogIsOpenReducer;\n","export const OPEN_DIALOG = 'OPEN_DIALOG';\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\nexport type OpenDialog = { type: typeof OPEN_DIALOG };\nexport type CloseDialog = { type: typeof CLOSE_DIALOG };\nexport type DialogIsOpenAction = OpenDialog | CloseDialog;\n","import {\n  GET_RESTAURANTS_SUCCESS,\n  GET_RESTAURANTS_FAILURE,\n  Restaurant,\n  RestaurantsAction,\n  RESET_RESTAURANTS,\n} from './types';\nimport { initialState } from '../rootReducer';\n\nconst restaurantsReducer = (\n  state = initialState.restaurants,\n  action: RestaurantsAction\n): Restaurant[] => {\n  switch (action.type) {\n    case GET_RESTAURANTS_SUCCESS:\n      return action.payload;\n    case GET_RESTAURANTS_FAILURE:\n      return state;\n    case RESET_RESTAURANTS:\n      return initialState.restaurants;\n    default:\n      return state;\n  }\n};\n\nexport default restaurantsReducer;\n","export type WorkTime = { open: number; close: number };\nexport type Restaurant = {\n  name: string;\n  0: WorkTime;\n  1: WorkTime;\n  2: WorkTime;\n  3: WorkTime;\n  4: WorkTime;\n  5: WorkTime;\n  6: WorkTime;\n};\n\nexport type ResponseRestaurant = {\n  name: string;\n  _id: string;\n  __v: number;\n  0: WorkTime;\n  1: WorkTime;\n  2: WorkTime;\n  3: WorkTime;\n  4: WorkTime;\n  5: WorkTime;\n  6: WorkTime;\n};\n\nexport const RESET_RESTAURANTS = 'RESET_RESTAURANTS';\nexport const GET_RESTAURANTS_SUCCESS = 'GET_RESTAURANTS_SUCCESS';\nexport const GET_RESTAURANTS_FAILURE = 'GET_RESTAURANTS_FAILURE';\n\nexport type ResetRestaurants = { type: typeof RESET_RESTAURANTS };\nexport type GetRestaurantsSuccess = { type: typeof GET_RESTAURANTS_SUCCESS; payload: Restaurant[] };\nexport type GetRestaurantsFailure = { type: typeof GET_RESTAURANTS_FAILURE };\n\nexport type RestaurantsAction = GetRestaurantsSuccess | GetRestaurantsFailure | ResetRestaurants;\n","import {\n  GET_FAVORITES_SUCCESS,\n  POST_FAVORITE_SUCCESS,\n  PUT_FAVORITE_SUCCESS,\n  DELETE_FAVORITE_SUCCESS,\n  REQUEST_FAVORITES_FAILURE,\n  Favorite,\n  FavoritesAction,\n} from './types';\nimport { initialState } from '../rootReducer';\n\nconst favoritesReducer = (state = initialState.favorites, action: FavoritesAction): Favorite[] => {\n  switch (action.type) {\n    case GET_FAVORITES_SUCCESS:\n      return action.payload;\n    case POST_FAVORITE_SUCCESS:\n      return state.concat(action.payload);\n    case PUT_FAVORITE_SUCCESS: {\n      const newState = [...state];\n      const idx = newState.findIndex((e) => e._id === action.payload._id);\n      newState[idx] = {\n        ...newState[idx],\n        name: action.payload.name,\n        restaurants: action.payload.restaurants,\n      };\n      return newState;\n    }\n    case DELETE_FAVORITE_SUCCESS: {\n      const idx = state.findIndex((e) => e.name === action.payload);\n      return state.slice(0, idx).concat(state.slice(idx + 1));\n    }\n    case REQUEST_FAVORITES_FAILURE:\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default favoritesReducer;\n","import { Restaurant } from '../restaurants/types';\nimport { User } from '../user/types';\n\nexport type Favorite = {\n  _id: string;\n  name: string;\n  restaurants: Restaurant[];\n  author: User;\n  coAuthors: User[];\n};\n\nexport const GET_FAVORITES_SUCCESS = 'GET_FAVORITES_SUCCESS';\nexport const POST_FAVORITE_SUCCESS = 'POST_FAVORITES_SUCCESS';\nexport const PUT_FAVORITE_SUCCESS = 'PUT_FAVORITES_SUCCESS';\nexport const DELETE_FAVORITE_SUCCESS = 'DELETE_FAVORITES_SUCCESS';\nexport const REQUEST_FAVORITES_FAILURE = 'REQUEST_FAVORITES_FAILURE';\n\nexport type GetFavoritesSuccess = { type: typeof GET_FAVORITES_SUCCESS; payload: Favorite[] };\nexport type PostFavoriteSuccess = { type: typeof POST_FAVORITE_SUCCESS; payload: Favorite };\nexport type PutFavoriteSuccess = {\n  type: typeof PUT_FAVORITE_SUCCESS;\n  payload: Favorite;\n};\nexport type DeleteFavoriteSuccess = {\n  type: typeof DELETE_FAVORITE_SUCCESS;\n  payload: string;\n};\nexport type RequestFavoritesFailure = { type: typeof REQUEST_FAVORITES_FAILURE };\n\nexport type FavoritesAction =\n  | GetFavoritesSuccess\n  | PostFavoriteSuccess\n  | PutFavoriteSuccess\n  | DeleteFavoriteSuccess\n  | RequestFavoritesFailure;\n","import { SHOW_MESSAGE, CLOSE_MESSAGE, MessageAction, Message } from './types';\nimport { initialState } from '../rootReducer';\n\nconst messageReducer = (state = initialState.message, action: MessageAction): Message => {\n  switch (action.type) {\n    case SHOW_MESSAGE:\n      return {\n        open: true,\n        content: action.payload.content,\n        confirmFunction: action.payload.confirmFunction ?? null,\n      };\n    case CLOSE_MESSAGE:\n      return initialState.message;\n    default:\n      return state;\n  }\n};\n\nexport default messageReducer;\n","export const SHOW_MESSAGE = 'SHOW_MESSAGE';\nexport const CLOSE_MESSAGE = 'CLOSE_MESSAGE';\nexport type ShowMessage = { type: typeof SHOW_MESSAGE; payload: Message };\nexport type CloseMessage = { type: typeof CLOSE_MESSAGE };\nexport type MessageAction = ShowMessage | CloseMessage;\n\nexport type Message = { open: boolean; content: string; confirmFunction: null | Function };\n","import { LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT, UserAction, User } from './types';\nimport { initialState } from '../rootReducer';\n\nconst userReducer = (state = initialState.user, action: UserAction): User => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return action.payload;\n    case LOGIN_FAILURE:\n      return state;\n    case LOGOUT:\n      return initialState.user;\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT = 'LOGOUT';\n\nexport type LoginSuccess = { type: typeof LOGIN_SUCCESS; payload: User };\nexport type LoginFailure = { type: typeof LOGIN_FAILURE };\nexport type Logout = { type: typeof LOGOUT };\n\nexport type UserAction = LoginSuccess | LoginFailure | Logout;\n\nexport type User = null | { name: string; email: string; token: string };\n","import { ADD_INVITE_KEY, CLEAR_INVITE_KEYS, InviteKeysAction } from './types';\nimport { initialState } from '../rootReducer';\n\nconst inviteKeysReducer = (state = initialState.inviteKeys, action: InviteKeysAction): string[] => {\n  switch (action.type) {\n    case ADD_INVITE_KEY:\n      return state.concat(action.payload);\n    case CLEAR_INVITE_KEYS:\n      return initialState.inviteKeys;\n    default:\n      return state;\n  }\n};\n\nexport default inviteKeysReducer;\n","export const ADD_INVITE_KEY = 'ADD_INVITE_KEY';\nexport const CLEAR_INVITE_KEYS = 'CLEAR_INVITE_KEYS';\nexport type AddInviteKey = { type: typeof ADD_INVITE_KEY; payload: string };\nexport type ClearInviteKeys = { type: typeof CLEAR_INVITE_KEYS };\nexport type InviteKeysAction = AddInviteKey | ClearInviteKeys;\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\nimport darkModeReducer from './darkMode/reducer';\nimport dialogIsOpenReducer from './dialog/reducer';\nimport { Restaurant } from './restaurants/types';\nimport restaurantsReducer from './restaurants/reducer';\nimport favoritesReducer from './favorites/reducer';\nimport { Favorite } from './favorites/types';\nimport { Message } from './message/types';\nimport messageReducer from './message/reducer';\nimport userReducer from './user/reducer';\nimport { User } from './user/types';\nimport inviteKeysReducer from './inviteKey/reducer';\n\nexport interface State {\n  user: User;\n  inviteKeys: string[];\n  darkMode: boolean;\n  message: Message;\n  dialogIsOpen: boolean;\n  restaurants: Restaurant[];\n  favorites: Favorite[];\n}\n\nexport const initialState: State = {\n  user: null,\n  inviteKeys: [],\n  darkMode: false,\n  message: { open: false, confirmFunction: null, content: '' },\n  dialogIsOpen: false,\n  restaurants: [],\n  favorites: [],\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  darkMode: darkModeReducer,\n  message: messageReducer,\n  dialogIsOpen: dialogIsOpenReducer,\n  restaurants: restaurantsReducer,\n  favorites: favoritesReducer,\n  inviteKeys: inviteKeysReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, Persistor } from 'redux-persist';\n\nimport { State, persistedReducer } from './rootReducer';\n\nconst configureStore = (initialState: State): { store: Store; persistor: Persistor } => {\n  const middleWares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middleWares);\n  const composedEnhancer = composeWithDevTools(middlewareEnhancer);\n\n  const store = createStore(persistedReducer, initialState, composedEnhancer);\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configureStore;\n","import { ShowMessage, CloseMessage, SHOW_MESSAGE, CLOSE_MESSAGE } from './types';\n\nexport const showMessage = (\n  content: string,\n  confirmFunction?: undefined | Function\n): ShowMessage => ({\n  type: SHOW_MESSAGE,\n  payload: { open: true, content, confirmFunction: confirmFunction ?? null },\n});\nexport const closeMessage = (): CloseMessage => ({ type: CLOSE_MESSAGE });\n","import axios from 'axios';\nimport { ThunkAction } from 'redux-thunk';\nimport { showMessage } from '../message/actions';\nimport { ShowMessage } from '../message/types';\nimport { Restaurant } from '../restaurants/types';\n\nimport { State } from '../rootReducer';\nimport {\n  GET_FAVORITES_SUCCESS,\n  POST_FAVORITE_SUCCESS,\n  PUT_FAVORITE_SUCCESS,\n  DELETE_FAVORITE_SUCCESS,\n  REQUEST_FAVORITES_FAILURE,\n  GetFavoritesSuccess,\n  PostFavoriteSuccess,\n  PutFavoriteSuccess,\n  DeleteFavoriteSuccess,\n  RequestFavoritesFailure,\n  Favorite,\n  FavoritesAction,\n} from './types';\n\nconst getFavoritesSuccess = (data: Favorite[]): GetFavoritesSuccess => ({\n  type: GET_FAVORITES_SUCCESS,\n  payload: data,\n});\n\nconst postFavoriteSuccess = (data: Favorite): PostFavoriteSuccess => ({\n  type: POST_FAVORITE_SUCCESS,\n  payload: data,\n});\n\nconst putFavoriteSuccess = (data: Favorite): PutFavoriteSuccess => ({\n  type: PUT_FAVORITE_SUCCESS,\n  payload: data,\n});\n\nconst deleteFavoriteSuccess = (data: string): DeleteFavoriteSuccess => ({\n  type: DELETE_FAVORITE_SUCCESS,\n  payload: data,\n});\n\nconst requestFavoritesFailure = (): RequestFavoritesFailure => {\n  return { type: REQUEST_FAVORITES_FAILURE };\n};\n\nexport const getFavorites = (\n  name: string = ''\n): ThunkAction<Promise<void>, State, undefined, FavoritesAction | ShowMessage> => (\n  dispatch,\n  getState\n) => {\n  const { user } = getState();\n  return axios\n    .get(`/api/favorites/${name}`, {\n      headers: { Authorization: `bearer ${user?.token}` },\n    })\n    .then((data) => {\n      if (data.status === 200) {\n        dispatch(getFavoritesSuccess(data.data));\n      }\n    })\n    .catch((err) => {\n      alert(err);\n      console.error(err);\n      dispatch(requestFavoritesFailure());\n    });\n};\n\nexport const postFavorite = (\n  favoriteName: string\n): ThunkAction<Promise<void>, State, undefined, FavoritesAction | ShowMessage> => (\n  dispatch,\n  getState\n) => {\n  const { user } = getState();\n  return axios\n    .post(\n      `/api/favorites/${favoriteName}`,\n      {},\n      { headers: { Authorization: `bearer ${user?.token}` } }\n    )\n    .then(({ data }) => {\n      if (data !== null) dispatch(postFavoriteSuccess(data));\n      else dispatch(showMessage(`${favoriteName} has been created!`));\n    })\n    .catch((err) => {\n      alert(err);\n      console.error(err);\n      dispatch(requestFavoritesFailure());\n    });\n};\n\n/**\n * * function 0: Update the Favorite name\n * * function 1: Add a Restaurant to the Favorite (remove === false)\n * * function 2: Remove a Restaurant from the Favorite (remove === true)\n */\ntype UpdateObject = { name?: string; restaurant?: Restaurant; remove: boolean };\nexport const putFavorite = (\n  favoriteName: string,\n  updateObject: UpdateObject\n): ThunkAction<Promise<void>, State, undefined, FavoritesAction | ShowMessage> => (\n  dispatch,\n  getState\n) => {\n  const { user } = getState();\n\n  return axios\n    .put(`/api/favorites/${favoriteName}`, updateObject, {\n      headers: { Authorization: `bearer ${user?.token}` },\n    })\n    .then(({ data }) => {\n      dispatch(putFavoriteSuccess(data as Favorite));\n      if (!updateObject.remove) {\n        if (updateObject.name === undefined) {\n          dispatch(showMessage(`${updateObject.restaurant?.name} added to ${favoriteName}`));\n        } else {\n          dispatch(showMessage(`Rename success`));\n        }\n      }\n    })\n    .catch((err) => {\n      alert(err);\n      console.error(err);\n      dispatch(requestFavoritesFailure());\n    });\n};\n\nexport const deleteFavorite = (\n  favoriteName: string\n): ThunkAction<Promise<void>, State, undefined, FavoritesAction | ShowMessage> => (\n  dispatch,\n  getState\n) => {\n  const { user } = getState();\n  return axios\n    .delete(`/api/favorites/${favoriteName}`, {\n      headers: { Authorization: `bearer ${user?.token}` },\n    })\n    .then(({ data }) => {\n      dispatch(deleteFavoriteSuccess(data.name));\n      return void 0;\n    })\n    .catch((err) => {\n      alert(err);\n      console.error(err);\n      dispatch(requestFavoritesFailure());\n    });\n};\n","import React, { useState, FC } from 'react';\nimport {\n  Popper,\n  MenuItem,\n  Grow,\n  ClickAwayListener,\n  Paper,\n  MenuList,\n  ButtonBase,\n  Tooltip,\n} from '@material-ui/core';\n\nexport type PopupMenuItemProps = {\n  name: string;\n  onClick: () => void;\n};\n\ninterface PopupMenuListProps {\n  title: string;\n  menuItems: PopupMenuItemProps[];\n}\nconst PopupMenuList: FC<PopupMenuListProps> = ({ children, title, menuItems }) => {\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleListKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Tooltip title={title}>\n        <ButtonBase ref={anchorRef} disableRipple onClick={handleToggle}>\n          {children}\n        </ButtonBase>\n      </Tooltip>\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition>\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                  {menuItems.map((menuItem) => (\n                    <MenuItem\n                      key={menuItem.name}\n                      onClick={() => {\n                        menuItem.onClick();\n                        handleToggle();\n                      }}\n                    >\n                      {menuItem.name}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </>\n  );\n};\n\nexport default PopupMenuList;\n","import React, { FC, memo } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { IconButton } from '@material-ui/core';\nimport { Bookmark } from '@material-ui/icons';\nimport { User } from '../../../store/user/types';\nimport { putFavorite } from '../../../store/favorites/actions';\nimport { Favorite } from '../../../store/favorites/types';\nimport { showMessage } from '../../../store/message/actions';\nimport { openDialog } from '../../../store/dialog/actions';\nimport { useHistory } from 'react-router';\nimport PopupMenuList, { PopupMenuItemProps } from '../../PopupMenuList';\nimport { Restaurant } from '../../../store/restaurants/types';\n\ninterface AddToFavoriteBtnProps {\n  restaurant: Restaurant;\n  favorites: Favorite[];\n  user: User;\n}\nconst AddToFavoriteBtn: FC<AddToFavoriteBtnProps> = ({ restaurant, favorites, user }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  // * If not login\n  if (user === null) return <div />;\n  // * If no favorite created, go and add favorite\n  if (favorites.length === 0) {\n    return (\n      <IconButton\n        color=\"inherit\"\n        onClick={() => {\n          dispatch(\n            showMessage('No favorite created. Create one?', () => {\n              history.push('/favorites');\n              dispatch(openDialog());\n            })\n          );\n        }}\n      >\n        <Bookmark />\n      </IconButton>\n    );\n  }\n\n  const menuItems: PopupMenuItemProps[] = favorites.map((e) => ({\n    name: e.name,\n    onClick: () => {\n      dispatch(putFavorite(e.name, { restaurant, remove: false }));\n    },\n  }));\n\n  return (\n    <PopupMenuList menuItems={menuItems} title=\"Add to favorite list\">\n      <Bookmark />\n    </PopupMenuList>\n  );\n};\n\nexport default memo(AddToFavoriteBtn);\n","import { OpenDialog, CloseDialog, OPEN_DIALOG, CLOSE_DIALOG } from './types';\n\nexport const openDialog = (): OpenDialog => ({ type: OPEN_DIALOG });\nexport const closeDialog = (): CloseDialog => ({ type: CLOSE_DIALOG });\n","import axios from 'axios';\nimport { ThunkAction } from 'redux-thunk';\nimport { Dates } from '../../util/dateOperations';\n\nimport { State } from '../rootReducer';\nimport {\n  GET_RESTAURANTS_SUCCESS,\n  GET_RESTAURANTS_FAILURE,\n  RESET_RESTAURANTS,\n  GetRestaurantsSuccess,\n  GetRestaurantsFailure,\n  ResetRestaurants,\n  RestaurantsAction,\n  Restaurant,\n  ResponseRestaurant,\n} from './types';\n\nexport const resetRestaurants = (): ResetRestaurants => ({\n  type: RESET_RESTAURANTS,\n});\n\nconst getRestaurantsSuccess = (data: Restaurant[]): GetRestaurantsSuccess => ({\n  type: GET_RESTAURANTS_SUCCESS,\n  payload: data,\n});\n\nconst getRestaurantsFailure = (error: any): GetRestaurantsFailure => {\n  console.error(error);\n  alert(error);\n  return { type: GET_RESTAURANTS_FAILURE };\n};\nexport type TimeObject = { hour: string; min: string; am: boolean };\nexport const getRestaurants = (\n  name: string,\n  dates: Dates[],\n  time: TimeObject\n): ThunkAction<Promise<void>, State, undefined, RestaurantsAction> => (dispatch) => {\n  const { hour, min, am } = time;\n  const dateStr: string = (dates as string[]).reduce((acc, curr) => `${acc},${curr}`);\n  const timeStr =\n    hour.length === 0\n      ? ''\n      : (\n          parseInt(hour) +\n          (am || parseInt(hour) === 12 ? 0 : 12) +\n          (min.length === 0 ? 0 : parseInt(min)) / 60\n        ).toString();\n\n  return axios\n    .get(`/api/restaurants?name=${name}&dates=${dateStr}&time=${timeStr}`)\n    .then(({ data }: { data: ResponseRestaurant[] }) => {\n      dispatch(getRestaurantsSuccess(data));\n    })\n    .catch((err) => {\n      dispatch(getRestaurantsFailure(err));\n    });\n};\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { State } from '../../../store/rootReducer';\nimport { Restaurant } from '../../../store/restaurants/types';\nimport { parseTimeToStr, dayList } from '../../../util/dateOperations';\nimport { User } from '../../../store/user/types';\nimport { getFavorites } from '../../../store/favorites/actions';\nimport { Favorite } from '../../../store/favorites/types';\nimport AddToFavoriteBtn from './AddToFavoriteBtn';\nimport { resetRestaurants } from '../../../store/restaurants/actions';\n\nconst SearchResultTable: FC = () => {\n  const dispatch = useDispatch();\n  const { restaurants, user, favorites } = useSelector<\n    State,\n    { restaurants: Restaurant[]; user: User; favorites: Favorite[] }\n  >((state) => ({\n    favorites: state.favorites,\n    restaurants: state.restaurants,\n    user: state.user,\n  }));\n\n  useEffect(() => {\n    if (user !== null) dispatch(getFavorites());\n  }, [user, dispatch]);\n  useEffect(() => {\n    return () => {\n      dispatch(resetRestaurants());\n    };\n  }, [dispatch]);\n\n  return (\n    <TableContainer style={{ gridArea: '5 / 1 / 12 / 13', width: '90%' }} component={Paper}>\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            {dayList.map((e) => (\n              <TableCell key={e}>{e}</TableCell>\n            ))}\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {restaurants.map((row, idx) => {\n            return (\n              <TableRow key={idx}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell style={{ whiteSpace: 'pre-line' }} align=\"right\">\n                  {parseTimeToStr(row[0].open, row[0].close)}\n                </TableCell>\n                <TableCell style={{ whiteSpace: 'pre-line' }} align=\"right\">\n                  {parseTimeToStr(row[1].open, row[1].close)}\n                </TableCell>\n                <TableCell style={{ whiteSpace: 'pre-line' }} align=\"right\">\n                  {parseTimeToStr(row[2].open, row[2].close)}\n                </TableCell>\n                <TableCell style={{ whiteSpace: 'pre-line' }} align=\"right\">\n                  {parseTimeToStr(row[3].open, row[3].close)}\n                </TableCell>\n                <TableCell style={{ whiteSpace: 'pre-line' }} align=\"right\">\n                  {parseTimeToStr(row[4].open, row[4].close)}\n                </TableCell>\n                <TableCell style={{ whiteSpace: 'pre-line' }} align=\"right\">\n                  {parseTimeToStr(row[5].open, row[5].close)}\n                </TableCell>\n                <TableCell style={{ whiteSpace: 'pre-line' }} align=\"right\">\n                  {parseTimeToStr(row[6].open, row[6].close)}\n                </TableCell>\n                <TableCell>\n                  <AddToFavoriteBtn restaurant={row} favorites={favorites} user={user} />\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default SearchResultTable;\n","import React, { memo, FC, Dispatch, SetStateAction } from 'react';\nimport { Button, useTheme } from '@material-ui/core';\nimport { DateOptions, Dates, dateNumToStr } from '../../util/dateOperations';\n\ninterface DateButtonGroupProps {\n  dateOptions: DateOptions;\n  setDateOptions: Dispatch<SetStateAction<DateOptions>>;\n}\nconst DateButtonGroup: FC<DateButtonGroupProps> = ({ dateOptions, setDateOptions }) => {\n  const theme = useTheme();\n\n  const dateNumList = Object.keys(dateOptions) as Dates[];\n\n  return (\n    <div style={{ display: 'flex' }}>\n      {dateNumList.map((dateNum) => {\n        return (\n          <Button\n            key={dateNum}\n            style={{\n              backgroundColor: dateOptions[dateNum]\n                ? theme.palette.grey[600]\n                : theme.palette.grey[500],\n              borderRadius: '0.1em',\n            }}\n            onClick={() => {\n              setDateOptions((prev) => ({\n                ...prev,\n                [dateNum]: !prev[dateNum],\n              }));\n            }}\n          >\n            {dateNumToStr(dateNum).replace(/^\\w/, (c: string): string => c.toUpperCase())}\n          </Button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(DateButtonGroup);\n","import React, { FC, memo, useState, useEffect, Dispatch, SetStateAction } from 'react';\nimport { Button, Input, Typography } from '@material-ui/core';\nimport { TimeObject } from '../../store/restaurants/actions';\n\ninterface TimeInputProps {\n  setSearchTime: Dispatch<SetStateAction<TimeObject>>;\n}\nconst TimeInput: FC<TimeInputProps> = ({ setSearchTime }) => {\n  const [hour, setHour] = useState<string>('');\n  const [min, setMin] = useState<string>('');\n  const [am, setAm] = useState<boolean>(false);\n\n  useEffect(() => {\n    setSearchTime({ hour, min, am });\n  }, [hour, min, am, setSearchTime]);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        width: '30%',\n        justifyContent: 'space-evenly',\n      }}\n    >\n      <Input\n        placeholder=\"00\"\n        type=\"number\"\n        style={{ width: '3em' }}\n        value={hour}\n        onChange={(e) => {\n          const { value } = e.target;\n          if (value.length === 0) {\n            setHour('');\n          } else if (parseInt(value) < 1) {\n            setHour('12');\n          } else {\n            const numValue = parseInt(value);\n            let hr = numValue % 13;\n            setHour((hr > 0 ? hr : 1).toString());\n          }\n        }}\n      />\n      <Typography variant=\"h5\" color=\"primary\">\n        :\n      </Typography>\n      <Input\n        placeholder=\"00\"\n        type=\"number\"\n        style={{ width: '3em' }}\n        value={min}\n        onChange={(e) => {\n          const { value } = e.target;\n          if (value.length === 0) {\n            setMin('');\n          } else if (parseInt(value) < 0) {\n            setMin('60');\n          } else {\n            const numValue = parseInt(value);\n            let min = numValue % 60;\n            setMin(min.toString());\n          }\n        }}\n      />\n      <Button\n        variant=\"contained\"\n        onClick={() => {\n          setAm((prev) => !prev);\n        }}\n      >\n        {am ? 'AM' : 'PM'}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(TimeInput);\n","import React, { FC, useRef, useState, useEffect, memo, useMemo, useCallback } from 'react';\nimport { Search } from '@material-ui/icons';\nimport { makeStyles, createStyles, Theme, fade, InputBase, Button } from '@material-ui/core';\nimport { getRestaurants, TimeObject } from '../../store/restaurants/actions';\nimport { useDispatch } from 'react-redux';\nimport { DateOptions, Dates } from '../../util/dateOperations';\nimport DateButtonGroup from './DateButtonGroup';\nimport TimeInput from './TimeInput';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      gridArea: '2 / 1 / 4 / 13',\n      display: 'flex',\n      flexFlow: 'column',\n      alignItems: 'center',\n      width: '100%',\n    },\n    searchContainer: {\n      padding: '1em',\n      width: '80%',\n      display: 'flex',\n      justifyContent: 'space-evenly',\n    },\n    dateSelectorContainer: {\n      width: '80%',\n      padding: '1em',\n      display: 'flex',\n      justifyContent: 'space-around',\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.35),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.55),\n      },\n      width: '80%',\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 1),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      width: '100%',\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      width: '100%',\n    },\n  })\n);\n\nconst SearchField: FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [searchName, setSearchName] = useState<string>('');\n  const date = new Date().getDay().toString();\n  const initSearchDateOption = useRef<DateOptions>({\n    [Dates.sun]: false,\n    [Dates.mon]: false,\n    [Dates.tue]: false,\n    [Dates.wed]: false,\n    [Dates.thu]: false,\n    [Dates.fri]: false,\n    [Dates.sat]: false,\n  });\n  const [searchDateOption, setSearchDateOption] = useState<DateOptions>(\n    initSearchDateOption.current\n  );\n  const [searchTime, setSearchTime] = useState<TimeObject>({ hour: '', min: '', am: false });\n  const [isSearchFieldFocus, setIsSearchFieldFocus] = useState<boolean>(false);\n\n  const dates = useMemo<Dates[]>(() => {\n    return (Object.keys(searchDateOption) as Dates[]).filter((date) => searchDateOption[date]);\n  }, [searchDateOption]);\n\n  useEffect(() => {\n    initSearchDateOption.current = { ...initSearchDateOption.current, [date]: true };\n    setSearchDateOption(initSearchDateOption.current);\n  }, [date, setSearchDateOption]);\n\n  const searchRestaurants = useCallback(() => {\n    dispatch(getRestaurants(searchName, dates, searchTime));\n    setSearchName('');\n    setSearchTime({ hour: '', min: '', am: false });\n    setIsSearchFieldFocus(false);\n    setSearchDateOption(initSearchDateOption.current);\n  }, [\n    searchName,\n    dates,\n    searchTime,\n    dispatch,\n    setSearchDateOption,\n    setSearchName,\n    setSearchTime,\n    setIsSearchFieldFocus,\n  ]);\n\n  useEffect(() => {\n    const pressEnterCallback = (e: KeyboardEvent) => {\n      if (e.key === 'Enter') {\n        searchRestaurants();\n      }\n    };\n\n    if (isSearchFieldFocus) {\n      window.addEventListener('keypress', pressEnterCallback);\n      return () => window.removeEventListener('keypress', pressEnterCallback);\n    }\n  }, [isSearchFieldFocus, dates, searchName, searchTime, searchRestaurants]);\n  return (\n    <div className={classes.container}>\n      <div className={classes.searchContainer}>\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <Search />\n          </div>\n          <InputBase\n            placeholder=\"Enter Restaurant Name...\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n            value={searchName}\n            onFocus={() => {\n              setIsSearchFieldFocus(true);\n            }}\n            onBlur={() => {\n              setIsSearchFieldFocus(false);\n            }}\n            onChange={(e) => {\n              setSearchName(e.target.value);\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n          />\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            searchRestaurants();\n          }}\n        >\n          Search\n        </Button>\n      </div>\n      <div className={classes.dateSelectorContainer}>\n        <DateButtonGroup dateOptions={searchDateOption} setDateOptions={setSearchDateOption} />\n        <TimeInput setSearchTime={setSearchTime} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SearchField);\n","import { Typography, useTheme } from '@material-ui/core';\nimport React, { FC } from 'react';\nimport SearchResultList from '../components/Home/SearchResultTable';\nimport SearchField from '../components/Home/SearchField';\n\nconst Home: FC = () => {\n  const theme = useTheme();\n  return (\n    <>\n      <SearchField />\n      <SearchResultList />\n      <a\n        style={{\n          gridArea: '12 / 11 / 13 / 13',\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'flex-end',\n          alignItems: 'flex-end',\n          color: theme.palette.getContrastText(\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n          ),\n        }}\n        href=\"https://dryicons.com/free-icons/restaurant\"\n      >\n        <Typography variant=\"body1\">Icon by Dryicons</Typography>\n      </a>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { Dispatch, FC } from 'react';\nimport { TextField, Typography } from '@material-ui/core';\n\ninterface FavoriteListTitleProps {\n  editMode: boolean;\n  favoriteName: string;\n  favoriteEditName: string;\n  setFavoriteEditName: Dispatch<string>;\n  setIsSearchFieldFocus: Dispatch<boolean>;\n}\nconst FavoriteListTitle: FC<FavoriteListTitleProps> = ({\n  editMode,\n  favoriteName,\n  favoriteEditName,\n  setFavoriteEditName,\n  setIsSearchFieldFocus,\n}) => {\n  return editMode ? (\n    <TextField\n      value={favoriteEditName}\n      size=\"medium\"\n      onChange={(e) => {\n        setFavoriteEditName(e.target.value);\n      }}\n      onFocus={() => {\n        setIsSearchFieldFocus(true);\n      }}\n      onBlur={() => {\n        setIsSearchFieldFocus(false);\n      }}\n    />\n  ) : (\n    <Typography variant=\"h4\">{favoriteName}</Typography>\n  );\n};\n\nexport default FavoriteListTitle;\n","import React, { FC, useEffect, useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { Cancel } from '@material-ui/icons';\nimport {\n  Button,\n  CardContent,\n  createStyles,\n  fade,\n  IconButton,\n  makeStyles,\n  Theme,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nimport { Favorite } from '../../../store/favorites/types';\nimport FavoriteCardTitle from './FavoriteCardTitle';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    editModeCard: {\n      minHeight: '9em',\n      '&:hover': {\n        cursor: 'default',\n      },\n      width: '80%',\n    },\n    normalCard: {\n      minHeight: '9em',\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.55),\n      },\n      width: '80%',\n      cursor: 'pointer',\n    },\n  })\n);\n\ninterface FavoriteCardProps {\n  editMode: boolean;\n  url: string;\n  favorite: Favorite;\n  selfEditName: (newName: string) => void;\n  selfDelete: () => void;\n}\nconst FavoriteCard: FC<FavoriteCardProps> = ({\n  editMode,\n  url,\n  favorite,\n  selfDelete,\n  selfEditName,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [isSearchFieldFocus, setIsSearchFieldFocus] = useState<boolean>(false);\n  const [favoriteEditName, setFavoriteEditName] = useState<string>(favorite.name);\n\n  useEffect(() => {\n    const pressEnterCallback = (e: KeyboardEvent) => {\n      if (e.key === 'Enter') {\n        selfEditName(favoriteEditName);\n      }\n    };\n\n    if (isSearchFieldFocus) {\n      window.addEventListener('keypress', pressEnterCallback);\n      return () => window.removeEventListener('keypress', pressEnterCallback);\n    }\n  }, [isSearchFieldFocus, favoriteEditName, selfEditName]);\n\n  return (\n    <Card\n      className={editMode ? classes.editModeCard : classes.normalCard}\n      onClick={() => {\n        if (!editMode) {\n          history.push(url);\n        }\n      }}\n      elevation={3}\n    >\n      <CardHeader\n        title={\n          <FavoriteCardTitle\n            favoriteName={favorite.name}\n            editMode={editMode}\n            favoriteEditName={favoriteEditName}\n            setFavoriteEditName={setFavoriteEditName}\n            setIsSearchFieldFocus={setIsSearchFieldFocus}\n          />\n        }\n        disableTypography={true}\n        action={\n          <IconButton\n            size=\"small\"\n            style={{\n              display: !editMode ? 'none' : undefined,\n              color: '#ff1744',\n            }}\n            onClick={selfDelete}\n          >\n            <Cancel />\n          </IconButton>\n        }\n      />\n      <CardContent style={{ display: !editMode ? 'none' : undefined }}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            selfEditName(favoriteEditName);\n          }}\n        >\n          Confirm\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default FavoriteCard;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteFavorite, getFavorites, putFavorite } from '../../store/favorites/actions';\nimport { Favorite } from '../../store/favorites/types';\nimport { showMessage } from '../../store/message/actions';\nimport { State } from '../../store/rootReducer';\nimport FavoriteCard from './FavoriteCard';\n\ninterface FavoritesContainerProps {\n  editMode: boolean;\n}\nconst FavoritesContainer: FC<FavoritesContainerProps> = ({ editMode }) => {\n  const dispatch = useDispatch();\n  const favorites = useSelector<State, Favorite[]>((state) => state.favorites);\n\n  useEffect(() => {\n    dispatch(getFavorites());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        gridArea: '4 / 2 / 12 / 12',\n        width: '100%',\n        overflow: 'scroll',\n        display: 'grid',\n        gridTemplate: 'repeat(3, 1fr) / repeat(5, 1fr)',\n        gap: '3em',\n      }}\n    >\n      {favorites.map((e) => (\n        <FavoriteCard\n          key={e.name}\n          editMode={editMode}\n          favorite={e}\n          url={`/favorites/${e.name}`}\n          selfEditName={(newName: string) => {\n            dispatch(putFavorite(e.name, { name: newName, remove: false }));\n          }}\n          selfDelete={() => {\n            dispatch(\n              showMessage(`It will delete all items in \"${e.name}\", confirm?`, () => {\n                dispatch(deleteFavorite(e.name));\n              })\n            );\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default FavoritesContainer;\n","import React, { useState, FC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { DialogTitle } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../../store/rootReducer';\nimport { closeDialog, openDialog } from '../../store/dialog/actions';\nimport { AddCircleOutline } from '@material-ui/icons';\nimport { postFavorite } from '../../store/favorites/actions';\nimport { showMessage } from '../../store/message/actions';\n\nconst AddFavoriteDialog: FC = () => {\n  const isOpen = useSelector<State, boolean>((state) => state.dialogIsOpen);\n  const dispatch = useDispatch();\n  const [favoriteName, setFavoriteName] = useState<string>('');\n\n  return (\n    <>\n      <Button\n        color=\"primary\"\n        startIcon={<AddCircleOutline />}\n        style={{ gridColumn: '11 / span 1' }}\n        onClick={(): void => {\n          dispatch(openDialog());\n        }}\n      >\n        Add\n      </Button>\n      <Dialog\n        open={isOpen}\n        onClose={(): void => {\n          dispatch(closeDialog());\n        }}\n      >\n        <DialogTitle>Add a new Favorite List</DialogTitle>\n        <DialogContent>\n          <TextField\n            margin=\"dense\"\n            label=\"Name\"\n            fullWidth\n            value={favoriteName}\n            onChange={(e) => {\n              setFavoriteName(e.target.value);\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={(): void => {\n              setFavoriteName('');\n              dispatch(closeDialog());\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(): void => {\n              if (favoriteName !== '') {\n                dispatch(postFavorite(favoriteName.toString()));\n                setFavoriteName('');\n                dispatch(closeDialog());\n              } else {\n                dispatch(showMessage('Empty name is not valid'));\n              }\n            }}\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default AddFavoriteDialog;\n","import React, { useState, FC } from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport FavoritesContainer from '../components/Favorites/FavoritesContainer';\nimport { EditOutlined } from '@material-ui/icons';\nimport AddFavoriteDialog from '../components/Favorites/AddFavoriteDialog';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    editModeOnBtn: {\n      gridArea: ' 3 / 2 / 4 / 3',\n      backgroundColor: theme.palette.primary.light,\n    },\n    normalBtn: {\n      gridArea: ' 3 / 2 / 4 / 3',\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n      },\n    },\n  })\n);\n\nconst Favorites: FC = () => {\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography\n        style={{\n          gridArea: '2 / 1 / 3 / 13',\n          display: 'flex',\n          justifyContent: 'center',\n          width: '100%',\n        }}\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Favorites\n      </Typography>\n      <Button\n        color=\"primary\"\n        className={editMode ? classes.editModeOnBtn : classes.normalBtn}\n        startIcon={<EditOutlined />}\n        onClick={() => {\n          setEditMode((prev) => !prev);\n        }}\n      >\n        Edit\n      </Button>\n      <AddFavoriteDialog />\n      <FavoritesContainer editMode={editMode} />\n    </>\n  );\n};\n\nexport default Favorites;\n","import React, { FC } from 'react';\nimport { Cancel } from '@material-ui/icons';\nimport { CardContent, IconButton, Typography, CardHeader, Card } from '@material-ui/core';\nimport { ResponseRestaurant, Restaurant } from '../../store/restaurants/types';\nimport { dateToStrArrProcess } from '../../util/dateOperations';\n\ninterface RestaurantCardProps {\n  editMode: boolean;\n  restaurant: Restaurant;\n  selfDelete: () => void;\n}\nconst RestaurantCard: FC<RestaurantCardProps> = ({ editMode, restaurant, selfDelete }) => {\n  const openInfo = dateToStrArrProcess(restaurant as ResponseRestaurant);\n  return (\n    <Card style={{ minHeight: '18em' }} elevation={3}>\n      <CardHeader\n        style={{ height: '30%', minHeight: '3.5em' }}\n        title={restaurant.name}\n        titleTypographyProps={{ variant: 'h6' }}\n        action={\n          <IconButton\n            size=\"small\"\n            style={{\n              display: !editMode ? 'none' : undefined,\n              color: '#ff1744',\n            }}\n            onClick={selfDelete}\n          >\n            <Cancel />\n          </IconButton>\n        }\n      />\n      <CardContent>\n        {openInfo.map((e, i) => (\n          <Typography key={i} color=\"textSecondary\" variant=\"body2\">\n            {e}\n          </Typography>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RestaurantCard;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router';\n\nimport { getFavorites, putFavorite } from '../../store/favorites/actions';\nimport { Favorite } from '../../store/favorites/types';\nimport { State } from '../../store/rootReducer';\nimport RestaurantCard from './RestaurantCard';\n\ninterface FavoriteRestaurantsContainerProps {\n  editMode: boolean;\n  favoriteName: string;\n}\nconst FavoriteRestaurantsContainer: FC<FavoriteRestaurantsContainerProps> = ({\n  editMode,\n  favoriteName,\n}) => {\n  const dispatch = useDispatch();\n  const favorite = useSelector<State, Favorite | null>(\n    (state) => state.favorites.find((e) => e.name === favoriteName) ?? null\n  );\n\n  useEffect(() => {\n    dispatch(getFavorites());\n  }, [dispatch]);\n\n  if (favorite === null) return <Redirect to=\"/favorites\" />;\n\n  return (\n    <div\n      style={{\n        gridArea: '4 / 2 / 13 / 12',\n        width: '100%',\n        overflow: 'scroll',\n        display: 'grid',\n        gridTemplate: 'repeat(2, 1fr) / repeat(4, 1fr)',\n        gap: '3em',\n      }}\n    >\n      {favorite.restaurants.map((e) => (\n        <RestaurantCard\n          key={e.name}\n          editMode={editMode}\n          restaurant={e}\n          selfDelete={() => {\n            dispatch(putFavorite(favorite.name, { restaurant: e, remove: true }));\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default FavoriteRestaurantsContainer;\n","import React, { useState, FC } from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport FavoriteRestaurantsContainer from '../components/FavortieContent/FavoriteRestaurantsContainer';\nimport { AddCircleOutline, EditOutlined } from '@material-ui/icons';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { showMessage } from '../store/message/actions';\nimport { useHistory, useParams } from 'react-router';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    editModeOnBtn: {\n      gridArea: ' 3 / 2 / 4 / 3',\n      backgroundColor: theme.palette.primary.light,\n    },\n    normalBtn: {\n      gridArea: ' 3 / 2 / 4 / 3',\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n      },\n    },\n  })\n);\n\nconst FavoriteContent: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { content } = useParams<{ content: string }>();\n  const classes = useStyles();\n  const [editMode, setEditMode] = useState<boolean>(false);\n\n  return (\n    <>\n      <Typography\n        style={{\n          gridArea: '2 / 1 / 3 / 13',\n          display: 'flex',\n          justifyContent: 'center',\n          width: '100%',\n        }}\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        {content}\n      </Typography>\n      <Button\n        color=\"primary\"\n        className={editMode ? classes.editModeOnBtn : classes.normalBtn}\n        startIcon={<EditOutlined />}\n        onClick={() => {\n          setEditMode((prev) => !prev);\n        }}\n      >\n        Edit\n      </Button>\n      <Button\n        color=\"primary\"\n        startIcon={<AddCircleOutline />}\n        style={{ gridColumn: '11 / span 1' }}\n        onClick={(): void => {\n          dispatch(\n            showMessage('Go search and add restaurants', () => {\n              history.push('/');\n            })\n          );\n        }}\n      >\n        Add\n      </Button>\n      <FavoriteRestaurantsContainer favoriteName={content} editMode={editMode} />\n    </>\n  );\n};\n\nexport default FavoriteContent;\n","import { ThemeOptions } from '@material-ui/core';\n\nconst getMuiThemeObj = (prefersDarkMode: boolean): ThemeOptions => ({\n  palette: {\n    type: prefersDarkMode ? 'dark' : 'light',\n    primary: {\n      light: '#f28933',\n      main: '#ef6c00',\n      dark: '#a74b00',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#616161',\n      main: '#e0e0e0',\n      dark: '#212121',\n      contrastText: '#000',\n    },\n    common: {\n      white: '#bdbdbd',\n    },\n  },\n  typography: {\n    button: {\n      textTransform: 'none',\n    },\n  },\n});\n\nexport default getMuiThemeObj;\n","import { CHANGE_MODE, ChangeDarkMode } from './types';\n\nexport const changeDarkMode = (isDarkMode?: boolean): ChangeDarkMode => ({ type: CHANGE_MODE, payload: isDarkMode });\n","import React, { useState, FC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { DialogTitle } from '@material-ui/core';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { showMessage } from '../../../store/message/actions';\n\nconst SignupDialog: FC = () => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState<boolean>(false);\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [name, setName] = useState<string>('');\n\n  const resetTextField = () => {\n    setEmail('');\n    setPassword('');\n    setName('');\n  };\n\n  return (\n    <>\n      <Button color=\"inherit\" style={{ margin: '0.5em 0.2em' }} onClick={(): void => setOpen(true)}>\n        Register\n      </Button>\n      <Dialog open={open} onClose={(): void => setOpen(false)}>\n        <DialogTitle>Register</DialogTitle>\n        <DialogContent>\n          <TextField\n            required\n            autoFocus\n            margin=\"dense\"\n            label=\"Email\"\n            type=\"email\"\n            fullWidth\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <TextField\n            required\n            margin=\"dense\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Name\"\n            type=\"name\"\n            fullWidth\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={(): void => {\n              setOpen(false);\n              resetTextField();\n            }}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(): void => {\n              if (email.length === 0) {\n                dispatch(showMessage(\"Email can't be empty\"));\n              }\n              if (password.length === 0) {\n                dispatch(showMessage(\"Password can't be empty\"));\n              }\n              axios\n                .post('/api/user/signup', { name, username: email, password })\n                .then(({ data }) => {\n                  dispatch(showMessage('Sign up success'));\n                  setOpen(false);\n                  resetTextField();\n                })\n                .catch((err: ErrorResponse) => {\n                  const {\n                    response: { data },\n                  } = err;\n                  dispatch(showMessage(`${data.err.message}`));\n                  setOpen(false);\n                  resetTextField();\n                });\n            }}\n          >\n            Signup\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\ntype ErrorResponse = {\n  response: {\n    data: ErrorData;\n  };\n};\ntype ErrorData = {\n  success?: boolean;\n  status?: string;\n  err: { name: string; message: string };\n};\n\nexport default SignupDialog;\n","import React, { useState, FC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport SignupDialog from './SignupDialog';\nimport { DialogTitle } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../../store/user/actions';\n\nconst LoginDialog: FC = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [open, setOpen] = useState<boolean>(false);\n\n  const onDialogClose = () => {\n    setOpen(false);\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" color=\"inherit\" onClick={(): void => setOpen(true)}>\n        Login\n      </Button>\n      <Dialog open={open} onClose={(): void => setOpen(false)}>\n        <DialogTitle>Login</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Email\"\n            type=\"email\"\n            fullWidth\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n          <SignupDialog />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            onClick={(): void => {\n              onDialogClose();\n            }}\n            color=\"secondary\"\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={(): void => {\n              dispatch(login(email, password));\n              onDialogClose();\n            }}\n            color=\"primary\"\n          >\n            Login\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default LoginDialog;\n","import axios from 'axios';\nimport { ThunkAction } from 'redux-thunk';\nimport { showMessage } from '../message/actions';\nimport { ShowMessage } from '../message/types';\n\nimport { State } from '../rootReducer';\nimport {\n  LoginFailure,\n  LoginSuccess,\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  Logout,\n  User,\n  UserAction,\n} from './types';\n\nconst loginSuccess = (data: User): LoginSuccess => ({\n  type: LOGIN_SUCCESS,\n  payload: data,\n});\n\nconst loginFailure = (): LoginFailure => {\n  return { type: LOGIN_FAILURE };\n};\n\nexport const logout = (): Logout => ({ type: LOGOUT });\n\ntype LoginErrorData = {\n  success: boolean;\n  status: string;\n  err: { name: string; message: string };\n};\nexport const login = (\n  email: string,\n  password: string\n): ThunkAction<Promise<void>, State, undefined, UserAction | ShowMessage> => (dispatch) => {\n  return axios\n    .post('/api/user/login', { username: email, password })\n    .then(({ data }) => {\n      if (data.success) {\n        console.info(data.status);\n        dispatch(loginSuccess({ email, name: data.name, token: data.token }));\n      }\n    })\n    .catch(({ response }) => {\n      const { data }: { data: LoginErrorData } = response;\n      if (data.success === false) {\n        dispatch(showMessage(`${data.status}: ${data.err.message}`));\n      }\n\n      dispatch(loginFailure());\n    });\n};\n","import React, { memo, FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { IconButton, Tooltip, Avatar } from '@material-ui/core';\nimport { Bookmark } from '@material-ui/icons';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../../store/rootReducer';\nimport { User } from '../../store/user/types';\nimport { logout } from '../../store/user/actions';\nimport PopupMenuList from '../PopupMenuList';\n\nconst UserAvatar: FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector<State, User>((state) => state.user);\n  const menuItems = [\n    {\n      name: 'Logout',\n      onClick: () => {\n        dispatch(logout());\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Tooltip title=\"Favorites\">\n        <IconButton\n          color=\"inherit\"\n          onClick={() => {\n            history.push('/favorites');\n          }}\n        >\n          <Bookmark />\n        </IconButton>\n      </Tooltip>\n      <PopupMenuList menuItems={menuItems} title=\"Setting\">\n        <Avatar>{user?.name === '' ? user?.email : user?.name}</Avatar>\n      </PopupMenuList>\n    </>\n  );\n};\n\nexport default memo(UserAvatar);\n","import React, { memo, FC } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AppBar, Toolbar, IconButton, Typography, ButtonBase, Tooltip } from '@material-ui/core';\nimport { Brightness2, BrightnessHigh } from '@material-ui/icons';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../../store/rootReducer';\nimport { changeDarkMode } from '../../store/darkMode/actions';\nimport LoginDialog from './LoginDialog';\nimport { User } from '../../store/user/types';\nimport UserAvatar from './UserAvatar';\n\nconst NavBar: FC = () => {\n  const dispatch = useDispatch();\n  const { darkMode, user } = useSelector<State, { darkMode: boolean; user: User }>((state) => ({\n    darkMode: state.darkMode,\n    user: state.user,\n  }));\n  const history = useHistory();\n\n  return (\n    <AppBar style={{ gridArea: '1 / 1 / 2 / 13' }} position=\"sticky\">\n      <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <ButtonBase\n          color=\"inherit\"\n          onClick={() => {\n            history.push('/');\n          }}\n        >\n          <Typography color=\"inherit\" variant=\"h6\">\n            Restaurant Search\n          </Typography>\n        </ButtonBase>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignContent: 'center',\n            width: '12%',\n          }}\n        >\n          <Tooltip title={darkMode ? 'Light' : 'Dark'}>\n            <IconButton\n              color=\"inherit\"\n              onClick={() => {\n                dispatch(changeDarkMode());\n              }}\n            >\n              {darkMode ? <BrightnessHigh /> : <Brightness2 />}\n            </IconButton>\n          </Tooltip>\n          {user !== null ? <UserAvatar /> : <LoginDialog />}\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default memo(NavBar);\n","import React, { FC } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      width: '100vw',\n      height: '100vh',\n      display: 'grid',\n      gridTemplate: 'repeat(12, 1fr) / repeat(12, 1fr)',\n      justifyItems: 'center',\n      gridGap: theme.spacing(3),\n    },\n  })\n);\n\nconst Layout: FC = ({ children }) => {\n  const classes = useStyles();\n  return <div className={classes.container}>{children}</div>;\n};\n\nexport default Layout;\n","import React, { FC } from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../store/rootReducer';\nimport { Message } from '../store/message/types';\nimport { closeMessage } from '../store/message/actions';\n\nconst MessageDialog: FC = () => {\n  const dispatch = useDispatch();\n  const message = useSelector<State, Message>((state) => state.message);\n\n  return (\n    <Dialog\n      open={message.open}\n      onClose={(): void => {\n        dispatch(closeMessage());\n      }}\n    >\n      <DialogContent>\n        <Typography variant=\"body1\">{message.content}</Typography>\n      </DialogContent>\n      <DialogActions>\n        {message.confirmFunction !== null && (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={(): void => {\n              dispatch(closeMessage());\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(): void => {\n            if (message.confirmFunction !== null) {\n              message.confirmFunction();\n            }\n            dispatch(closeMessage());\n          }}\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default MessageDialog;\n","import React, { useEffect, useMemo, FC } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { useMediaQuery } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './styles/global.css';\nimport Home from './pages/index';\nimport Favorites from './pages/favorites';\nimport FavoriteContent from './pages/favoriteContent';\nimport getMuiThemeObj from './styles/theme';\n\nimport NavBar from './components/NavBar';\nimport Layout from './components/Layout';\nimport { State } from './store/rootReducer';\nimport { changeDarkMode } from './store/darkMode/actions';\nimport MessageDialog from './components/MessageDialog';\n\nconst App: FC = () => {\n  const darkMode = useSelector<State, boolean>((state) => state.darkMode);\n  const dispatch = useDispatch();\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = useMemo(() => createMuiTheme(getMuiThemeObj(darkMode)), [darkMode]);\n\n  // useEffect(() => {\n  //   persistor.purge()\n  // }, [])\n  useEffect(() => {\n    dispatch(changeDarkMode(prefersDarkMode));\n  }, [prefersDarkMode, dispatch]);\n  useEffect(() => {\n    document.body.style.backgroundColor = darkMode\n      ? theme.palette.grey[900]\n      : theme.palette.grey[50];\n  }, [darkMode, theme.palette.grey]);\n\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <Layout>\n          <NavBar />\n          <MessageDialog />\n          <Switch>\n            <Route path=\"/favorites/:content\" component={FavoriteContent} />\n            <Route path=\"/favorites\" component={Favorites} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </Layout>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.info(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.info('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.warn(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { CircularProgress } from '@material-ui/core';\n\nimport configureStore from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initialState } from './store/rootReducer';\n\nconst { store, persistor } = configureStore(initialState);\n\n// export persistor;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<CircularProgress />} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}